<?xml version="1.0"?>
<doc>
<assembly>
<name>
chanb
</name>
</assembly>
<members>
<member name="M:chanb.Misc.EncryptStringAES(System.String,System.String)">
	<summary>
 Encrypt the given string using AES.  The string can be decrypted using 
 DecryptStringAES().  The sharedSecret parameters must match.
 </summary>
	<param name="plainText">The text to encrypt.</param>
	<param name="sharedSecret">A password used to generate a key for encryption.</param>
</member><member name="M:chanb.Misc.DecryptStringAES(System.String,System.String)">
	<summary>
 Decrypt the given string.  Assumes the string was encrypted using 
 EncryptStringAES(), using an identical sharedSecret.
 </summary>
	<param name="cipherText">The text to decrypt.</param>
	<param name="sharedSecret">A password used to generate a key for decryption.</param>
</member><member name="M:chanb.Misc.Validators.FSContainSign(System.IO.Stream,System.String)">
	<summary>
 Experimental, not meant to be used.
 </summary>
	<param name="fs"></param>
	<param name="sign"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:chanb.ValuesStore.AddKey(System.String,System.String)">
	<summary>
 Update an existing key or add a new key.
 </summary>
</member><member name="T:chanb.ValuesStore">
	<summary>
 A class that represent a simple dictionary / setting storing system.
 Written by diantahoc
 Project: Novelli Torrent
 </summary>
	<remarks></remarks>
</member><member name="M:chanb.UnixCrypt.IntToFourBytes(System.UInt32,System.Byte[],System.UInt32)">
	<summary>
 Converts an uint into 4 seperate bytes.
 </summary>
	<param name="inputInt">The uint to convert.</param>
	<param name="outputBytes">The byte buffer into which to store the result.</param>
	<param name="offset">The offset to start storing at in the outputBytes buffer.</param>
</member><member name="M:chanb.UnixCrypt.PermOperation(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32[])">
	<summary>
 Performs some operation on 4 uints. It's labeled PERM_OP in the original source.
 </summary>
	<param name="firstInt">The first uint to use.</param>
	<param name="secondInt">The second uint to use.</param>
	<param name="thirdInt">The third uint to use.</param>
	<param name="fourthInt">The fourth uint to use.</param>
	<param name="operationResults">An array of 2 uints that are the result of this operation.</param>
</member><member name="M:chanb.UnixCrypt.HPermOperation(System.UInt32,System.Int32,System.UInt32)">
	<summary>
 Performs some operation on 3 uints. It's labeled HPERM_OP in the original source.
 </summary>
	<param name="firstInt">The first uint to use.</param>
	<param name="secondInt">The second int to use.</param>
	<param name="thirdInt">The third uint to use.</param>
	<returns>An int that is the result of this operation.</returns>
</member><member name="M:chanb.UnixCrypt.SetDESKey(System.Byte[])">
	<summary>
 This method does some very complex bit manipulations.
 </summary>
	<param name="encryptionKey">The input data to use for the bit manipulations.</param>
	<returns>m_desIterations * 2 number of uints that are the result of the manipulations.</returns>
</member><member name="M:chanb.UnixCrypt.DEncrypt(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32[])">
	<summary>
 This method does some bit manipulations.
 </summary>
	<param name="left">An input that is manipulated and then used for output.</param>
	<param name="right">This is used for the bit manipulation.</param>
	<param name="scheduleIndex">The index of an uint to use from the schedule array.</param>
	<param name="firstSaltTranslator">The translated salt for the first salt character.</param>
	<param name="secondSaltTranslator">The translated salt for the second salt character.</param>
	<param name="schedule">The schedule arrray calculated before.</param>
	<returns>The result of these manipulations.</returns>
</member><member name="M:chanb.UnixCrypt.Body(System.UInt32[],System.UInt32,System.UInt32)">
	<summary>
 Calculates two uints that are used to encrypt the password.
 </summary>
	<param name="schedule">The schedule table calculated earlier.</param>
	<param name="firstSaltTranslator">The first translated salt character.</param>
	<param name="secondSaltTranslator">The second translated salt character.</param>
	<returns>2 uints in an array.</returns>
</member><member name="M:chanb.UnixCrypt.Crypt(System.String)">
	<summary>
 Automatically generate the encryption salt (2 random printable characters for use in the encryption) and call the Crypt() method.
 </summary>
	<param name="textToEncrypt">The text that must be encrypted.</param>
	<returns>The encrypted text.</returns>
</member><member name="M:chanb.UnixCrypt.Crypt(System.String,System.String)">
	<summary>
 Encrypts the specified string using the Unix crypt algorithm.
 </summary>
	<param name="encryptionSalt">2 random printable characters that are used to randomize the encryption.</param>
	<param name="textToEncrypt">The text that must be encrypted.</param>
	<returns>The encrypted text.</returns>
</member><member name="T:chanb.UnixCrypt">
	<summary>
 Provides the Unix crypt() encryption algorithm.
 </summary>
	<remarks>
 This class is a port from Java source. I do not understand the underlying algorithms, I just converted it to C# and it works.
 Because I do not understand the underlying algorithms I cannot give most of the variables useful names. I have no clue what their
 significance is. I tried to give the variable names as much meaning as possible, but the original source just called them a, b, c , etc...
 
 A very important thing to note is that all ints in this code are UNSIGNED ints! Do not change this, ever!!! It will seriously fuckup the working
 of this class. It uses major bitshifting and while Java gives you the &gt;&gt;&gt; operator to signify a right bitshift WITHOUT setting the MSB for
 a signed int, C# does not have this operator and will just set the new MSB for you if it happened to be set the moment you bitshifted it.
 This is undesirable for most bitshifts and in the cases it did matter, I casted the variable back to an int. This was only required where
 a variable was on the right-side of a bitshift operator.
 
 Reconverted to VB using Instant VB
 </remarks>
</member><member name="M:chanb.GlobalFunctions.ImageHaveTransparentBits(System.Drawing.Bitmap)">
	<summary>
 Check if the image have transparent pixels.
 </summary>
	<param name="image"></param>
	<returns></returns>
</member><member name="M:chanb.GlobalFunctions.GetImageWEBPATH(System.String)">
	<summary>
 For full image
 </summary>
	<param name="name"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:chanb.GlobalFunctions.GetImageWEBPATHRE(System.String)">
	<summary>
 For thumbnails
 </summary>
	<param name="name"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:chanb.GlobalFunctions.GetStreamThreadHTML(System.Int32,chanb.HTMLParameters,System.Int32)">
	<summary>
 Return a string for threads displayed in the main page.
 </summary>
	<param name="threadID"></param>
	<param name="para"></param>
	<param name="trailposts"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:chanb.GlobalFunctions.GetThreadHTML(System.Int32,chanb.HTMLParameters)">
	<summary>
 Get the complete thread html, over a single SQL query.
 </summary>
</member><member name="M:chanb.GlobalFunctions.PrunePost(System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Prune a post. It either delete a post or archive it, based on specific conditions. 
 </summary>
	<param name="id">Post id. Can be a thread or a reply.</param>
	<param name="dF">Delete files</param>
	<remarks></remarks>
</member><member name="M:chanb.GlobalFunctions.ReplyTo(System.Int32,chanb.OPData)">
	<summary>
 Append a post to thread
 </summary>
	<param name="id">id of the thread</param>
	<param name="data">Poster data</param>
	<remarks></remarks>
</member><member name="M:chanb.GlobalFunctions.GetWpostList(System.Int32[])">
	<summary>
 Retrive all ids over a single sql connection.
 </summary>
	<param name="id"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:chanb.GlobalFunctions.MatchBBCode(System.String,System.String)">
	<summary>
 Get a list of all matches for a given bb code.
 </summary>
	<param name="text"></param>
	<param name="bbcode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:chanb.GlobalVariables.WebRoot">
	<summary>
 Get application web root.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>With a trailing slash /</remarks>
</member><member name="M:chanb.DatabaseEngine.ExecuteNonQuery(System.String)">
	<summary>
 Execute text query.
 </summary>
	<param name="QueryText"></param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:chanb.DatabaseEngine.ExecuteNonQuery(System.Data.Common.DbCommand)">
	<summary>
 Execute DbCommand query.
 </summary>
	<param name="Query"></param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:chanb.DatabaseEngine.ExecuteNonQuery(System.String,System.Data.Common.DbConnection)">
	<summary>
 Execute text query with an existing connection.
 </summary>
	<param name="QueryText"></param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:chanb.DatabaseEngine.ExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbConnection)">
	<summary>
 Execute DbCommand query with an existing connection.
 </summary>
	<param name="Query"></param>
	<returns>Number of rows affected</returns>
	<remarks></remarks>
</member><member name="M:chanb.DatabaseEngine.ExecuteQueryReader(System.String)">
	<summary>
 Execute text query.
 </summary>
	<param name="QueryText"></param>
	<returns>ChanbQuery</returns>
	<remarks></remarks>
</member><member name="M:chanb.DatabaseEngine.ExecuteQueryReader(System.Data.Common.DbCommand)">
	<summary>
 Execute DbCommand query.
 </summary>
	<param name="Query"></param>
	<returns>ChanbQuery</returns>
	<remarks></remarks>
</member><member name="M:chanb.DatabaseEngine.ExecuteQueryReader(System.String,System.Data.Common.DbConnection)">
	<summary>
 Execute text query with an existing connection.
 </summary>
	<param name="QueryText"></param>
	<param name="i"></param>
	<returns>ChanbQuery</returns>
	<remarks></remarks>
</member><member name="M:chanb.DatabaseEngine.ExecuteQueryReader(System.Data.Common.DbCommand,System.Data.Common.DbConnection)">
	<summary>
 Execute DbCommand query with an existing connection.
 </summary>
	<param name="Query"></param>
	<param name="i"></param>
	<returns>ChanbQuery</returns>
	<remarks></remarks>
</member><member name="M:chanb.CustomFileHandler.GetHTTPFileThumb(System.IO.Stream)">
	<summary>
 Called when a user upload a file.
 </summary>
	<param name="f"></param>
	<returns></returns>
	<remarks>If no thumbnail is required for the file, please return a CFHThumbData class with thumbRequired = False.</remarks>
</member><member name="M:chanb.CustomFileHandler.GetFileHTML(chanb.WPostImage)">
	<summary>
 Called when ChanB need to display a file.
 </summary>
	<param name="wpi"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:chanb.CustomFileHandler.GetFileHTML_NoScript(chanb.WPostImage)">
	<summary>
 Called when ChanB need to display a file when JavaScript is disabled.
 </summary>
	<param name="wpi"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:chanb.CustomFileHandler.GetJSHandler">
	<summary>
 Called by ChanB JS extension when updating a thread.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:chanb.CustomFileHandler.Get_Supported_Files">
	<summary>
 Needs to return an array containing all the supported files extension.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:chanb.CustomFileHandler.FileHasThumb(System.String)">
	<summary>
 Need to return if the file associated with this extension has a thumnbail
 </summary>
	<param name="lower_case_fileExtension">The lowercase extension. It's only the extension part (for example 'jpg', not '.jpg')</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:chanb.CaptchaData.CaptchaChallenge">
	<summary>
 The captcha session challenge
 </summary>
	<remarks></remarks>
</member><member name="P:chanb.My.MyWebExtension.Computer">
	<summary>
 Returns information about the host computer.
 </summary>
</member><member name="P:chanb.My.MyWebExtension.User">
	<summary>
 Returns information for the current Web user.
 </summary>
</member><member name="P:chanb.My.MyWebExtension.Request">
	<summary>
 Returns Request object.
 </summary>
</member><member name="P:chanb.My.MyWebExtension.Response">
	<summary>
 Returns Response object.
 </summary>
</member><member name="P:chanb.My.MyWebExtension.Log">
	<summary>
 Returns the Asp log object.
 </summary>
</member><member name="T:chanb.My.MyWebExtension">
	<summary>
 Module used to define the properties that are available in the My Namespace for Web projects.
 </summary>
	<remarks></remarks>
</member><member name="F:chanb.MakeAllStatic.form1">
	<summary>
form1 control.
</summary>
	<remarks>
Auto-generated field.
To modify move field declaration from designer file to code-behind file.
</remarks>
</member><member name="P:chanb.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:chanb.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:chanb.My.Resources.Resources.eq">
	<summary>
  Looks up a localized string similar to &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;title&gt;An error has been occured&lt;/title&gt;
&lt;style&gt;
html {
  background-color: #E6E6E6;
  font-size: 10pt;
  margin: 50px 40px 20px 40px;
  text-align: center;
}
body {
  margin: auto;
  max-width: 540px;
  min-width: 200px;
}
#pc {
  margin: auto;
  padding-bottom: 20px;
  max-width: 540px;
  min-width: 200px;
  border: 0px solid #AAA;
  color: #444;
  background-color: #f9f9f9;
  border: 1px solid #AAA;
  border-bottom: 1px solid #888 [rest of string was truncated]";.
</summary>
</member><member name="P:chanb.My.Resources.Resources.messageTemplate">
	<summary>
  Looks up a localized string similar to &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;head&gt; &lt;META HTTP-EQUIV="pragma" CONTENT="no-cache"&gt; &lt;title&gt;%TITLE%&lt;/title&gt; &lt;style&gt;html{background-color:#e6e6e6;font-size:10pt;margin:50px 40px 20px 40px;text-align:center}body{margin:auto;max-width:540px;min-width:200px}#pc{margin:auto;padding-bottom:20px;max-width:540px;min-width:200px;border:0 solid #AAA;color:#444;background-color:#f9f9f9;border:1px solid #AAA;border-bottom:1px solid #888;border-radius:3px;box-shadow:0 2px 2px #AAA}#pc #titleText{color:#666;m [rest of string was truncated]";.
</summary>
</member><member name="P:chanb.My.Resources.Resources.mssqlDatabaseSetup">
	<summary>
  Looks up a localized string similar to /****** Object:  Table [dbo].[bans]    Script Date: 07/20/2013 08:13:55 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[bans]') AND type in (N'U'))
DROP TABLE [dbo].[bans]

/****** Object:  Table [dbo].[board]    Script Date: 07/20/2013 08:13:55 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[board]') AND type in (N'U'))
DROP TABLE [dbo].[board]

/****** Object:  Table [dbo].[files]    Script Date: 07/20/2013 08:13:55 ******/
IF  [rest of string was truncated]";.
</summary>
</member><member name="P:chanb.My.Resources.Resources.mysqlDatabaseSetup">
	<summary>
  Looks up a localized string similar to -- phpMyAdmin SQL Dump
-- version 3.3.8.1
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: Jul 20, 2013 at 08:32 AM
-- Server version: 5.1.51
-- PHP Version: 5.3.3

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `channelboard`
--

-- ------------------ [rest of string was truncated]";.
</summary>
</member><member name="T:chanb.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>